#!/usr/bin/env python3
import argparse
parser = argparse.ArgumentParser()
parser.add_argument('host', nargs='?', default='localhost')
parser.add_argument('port', nargs='?', default=8000, type=int)
args = parser.parse_args()

import telnetlib
tn = telnetlib.Telnet(args.host, args.port)
tn.set_debuglevel(3)

from Crypto.Util.number import *
import ast
while True:
    tn.read_until(b'\xf0\x9f\x94\x92 1. ')
    n = [ None ] * 3
    c = [ None ] * 3
    n[0], e, c[0] = ast.literal_eval(tn.read_until(b'\n').decode())
    tn.read_until(b'\xf0\x9f\x94\x92 2. ')
    n[1], e, c[1] = ast.literal_eval(tn.read_until(b'\n').decode())
    tn.read_until(b'\xf0\x9f\x94\x92 3. ')
    n[2], e, c[2] = ast.literal_eval(tn.read_until(b'\n').decode())
    tn.read_until(b'>>> ')
    for i in range(3):
        m = bytes_to_long(b'WIN \xf0\x9f\x92\x8e')
        if pow(m, e, n[i]) == c[i]:
            tn.write((str(i + 1) + '\n').encode())
            break
    else:
        assert False
    tn.read_until(b'you win')
